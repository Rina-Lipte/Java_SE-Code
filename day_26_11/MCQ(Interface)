1.Choose the correct output of the following program

interface Add
{
	int add(int b);
}
public class FunctionalInterface {
	
	public static void main(String[] args)
	{
		int a = 10;
		
		Add add = (int b) -> b;
		System.out.println(add.add(a));
	}
}
OUTPUT:=>10
_______________________________________________________________________________
2.Choose the correct output of the following program
@FunctionalInterface
interface Cube
{
	int cube(int b);
}
public class FunctionalInterface {
	
	public static void main(String[] args) {
		int a = 21;
		
		Cube cube = b -> b*b*b;
		System.out.println(cube.cube(a));
	}
}

OUTPUT:=>9261
________________________________________________________________________________
3.What is the output of the following program
interface Add
{
	int add(int b);
	int add(int a, int b);
}
public class FunctionalInterface {
	public static void main(String[] args) {
		int a = 21;
		Add add = b -> b+b;
		System.out.println(add.add(a));
	}
}

OUTPUT:=>Unresolved compilation problem: 
	The target type of this expression must be a functional interface
_______________________________________________________________________________
4.What is the output of the following program
@FunctionalInterface
interface Str
{
	int methodStr(String str);
}
public class FunctionalInterface {
	public static void main(String[] args) {
		Str str = (String s) -> "2";
		System.out.println(str.methodStr("2"));
	}
}

OUTPUT:=>Unresolved compilation problem: 
	Type mismatch: cannot convert from String to int
________________________________________________________________________________
5.Choose the correct output of the following program
public class FunctionalInterface {
	public static void main(String[] args) {
		String str -> str.compareTo("goolge");
		System.out.println(str);
	}
}
Output:=>Error(Syntax error on token "->", ; expected)
________________________________________________________________________________
6.What is the output of the following code
@FunctionalInterface
interface NIT
{
	String get(String nit);
}
public class FunctionalInterfaceExample
{
	public static void main(String[] args) {
		NIT nit = (str) -> str +"Welcome to"; // str concatenate to "Welcome to" 
		NIT nit1 = (str) -> str + "NARESHIT"; // str1 concatenate to "NARESHIT"
		information("Hai ", nit); // HAI + Welcome to
		information("Hai ", nit1); // HAI + NARESHIT
	}
	public static void information(String str, NIT obj) {
		String result = obj.get(str);
		System.out.println(result);
	}
}

OUTPUT:=>Hai Welcome to
Hai NARESHIT
_______________________________________________________________________________
7.By using FunctionalInterface annotation following code is correct or not?
@FunctionalInterface
interface NIT
{
	String myInterface(String a);
	String newInterface();
	
}

OUTPUT:=>Not Correct.
________________________________________________________________________________
8.What is the output of the following code
@FunctionalInterface
interface NIT{
 int square(int x);
 default int add(int a, int b){
     return a+b;
 }
 default int sub(int a, int b){
     return a-b;
 }
 static int multiply(int a, int b){
     return a*b;
 }
 static int divide(int a, int b){
     return a/b;
 }
}
public class FunctionalInterfaceExample implements NIT{
 public static void main(String[] args){
     int a = 25;
     int b = 5;
     FunctionalInterfaceExample fun = new FunctionalInterfaceExample();
     int add = fun.add(a,b);
     int sub = fun.sub(a,b);
     int mul = NIT.multiply(a,b);
     int div = NIT.divide(a,b);
     System.out.println(add+" "+sub+" "+mul+" "+div+" "+fun.square(6));
} 
 @Override
 public int square(int x) {
     return x*x;
 }
}

OUTPUT:=>30 20 125 5 36
__________________________________________________________________________________

9.What is the output of the following code
@FunctionalInterface
interface NIT{
 int square(int x);
 static int add(int a, int b){
     return a+b;
 }
 static int sub(int a, int b){
     return a-b;
 }
 static int multiply(int a, int b){
     return a*b;
 }
 static int divide(int a, int b){
     return a/b;
 }
}
public class FunctionalInterfaceExample{
 public static void main(String[] args){
     int a = 25;
     int b = 5;  
     int add = NIT.add(a,b);
     int sub = NIT.sub(a,b);
     int mul = NIT.multiply(a,b);
     int div = NIT.divide(a,b);
     System.out.print(add+" "+sub+" "+mul+" "+div+" ");
      
     NIT sq = (x) -> 
     {
    	 return x*x;
     };
     System.out.print(sq.square(6));
 }
}

OUTPUT:=>30 20 125 5 36
__________________________________________________________________________________

10. public class FunctionalInterfaceExample{
	public static void main(String[] args) {
		Function<String, String> fun = str -> str.substring(2,5);
		System.out.println(fun.apply("Hyderabad"));
	}
}

OUTPUT:=>der

__________________________________________________________________________________
11.By using FunctionalInterface annotation following code is correct or not?
@FunctionalInterface
interface NIT
{
	String myInterface(String a);
	default void nit() 
	{
		
	}
	default int newInterface(int a) 
	{
		return a;
	}
}

OUTPUT:=>Correct
_________________________________________________________________________________
12.Is there any error in following code?
@FunctionalInterface
interface NIT
{
	String myInterface(String a); //abstract method 
	int hashCode(); //Object class methods
	String toString();	
}

Output:=>No
__________________________________________________________________________________
13.Is there any error in following code?
@FunctionalInterface
interface NIT
{
	String myInterface(String a); //abstract method
	@Override
	String toString(); //Object class method
	void wait();
	void notify();
	
}

OUTPUT:=>Error:Can not override the final method from the obj class.
_________________________________________________________________________________
14.What is the output of the following code
public class FunctionalInterfaceExample{
	public static void main(String[] args) {
		Predicate<Integer> grater = a -> a >15;
		
		Predicate<Integer> less = a -> a <10;
		
		boolean bool = grater.test(20);
		boolean bool1 = less.test(5);
		System.out.println(bool);
		System.out.println(bool1);		
		
	}
}

OUTPUT:=>true
true
________________________________________________________________________________

15.What is the output of the following code
public class FunctionalInterfaceExample{
	public static void main(String[] args) 
	{
		String str[]= {"Java","Python","Naresh","IT"};
		
		Predicate<String> prediacte = p -> p.endsWith("va");
		for(String s: str) 
		{
			if(prediacte.test(s))
				System.out.println(s);
		}
	}
}

OUTPUT:=>Java.
_________________________________________________________________________________
16.What is the output of the following code
interface NIT
{
	public int myInterface(int a);
}

public class Java8 {
	public static void main(String[] args) {
		NIT nit = (a) -> a+1;
		int i = nit.myInterface(6);
		System.out.println(i);
	}
}

OUTPUT:=>7
__________________________________________________________________________________
17.What is the output of the following code?
@FunctionalInterface
interface NIT
{	
	int myInterface(int a);
}

@FunctionalInterface
interface NewInterface
{
	void alpha(String a);
}

public class Java8 {
	public static void main(String[] args) {
		NIT nit = (a) -> a*a*a;
		System.out.println(nit.myInterface(5));
		NewInterface result = (a) -> System.out.println("Welcome to NareshIT");
		result.alpha("");
	}
}

OUTPUT:=>125
Welcome to NareshIT
___________________________________________________________________________________
18.What is the output of the following code?
public class Java8 {
	public static void main(String[] args) {
		Consumer<Integer> value = (a) -> System.out.println(a*3);
		value.accept(5);
	}
}

Output:=>15
_________________________________________________________________________________

19. What is the output of the following code?
public class Java8 {
	public static void main(String[] args) {
		Consumer<String> value = (a) -> System.out.println("Naresh I Technologies");
		value.accept("");
	}
}

OUTPUT:=>Naresh I Technologies
___________________________________________________________________________________
20. What is the output of the following code?
public class Java8 {
	public static void main(String[] args) {
		Consumer<String> value = (a) -> System.out.println(a.toLowerCase());
		value.accept("NareshIT");
	}
}

OUTPUT:=>nareshit
__________________________________________________________________________________